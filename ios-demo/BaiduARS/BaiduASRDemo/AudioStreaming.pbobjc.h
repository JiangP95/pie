// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: audio_streaming.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AudioFragmentResult;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ProtoVersion

typedef GPB_ENUM(ProtoVersion) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ProtoVersion_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ProtoVersion_UnknownVer = 0,
  ProtoVersion_Version1 = 1,
  ProtoVersion_Version2 = 2,
  ProtoVersion_Version3 = 3,
  ProtoVersion_Version4 = 4,
  ProtoVersion_Version5 = 5,
};

GPBEnumDescriptor *ProtoVersion_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ProtoVersion_IsValidValue(int32_t value);

#pragma mark - Enum ResponseType

typedef GPB_ENUM(ResponseType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ResponseType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ResponseType_UnknownType = 0,
  ResponseType_FragmentData = 1,
};

GPBEnumDescriptor *ResponseType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ResponseType_IsValidValue(int32_t value);

#pragma mark - AudioStreamingRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface AudioStreamingRoot : GPBRootObject
@end

#pragma mark - InitRequest

typedef GPB_ENUM(InitRequest_FieldNumber) {
  InitRequest_FieldNumber_EnableLongSpeech = 1,
  InitRequest_FieldNumber_EnableChunk = 2,
  InitRequest_FieldNumber_EnableFlushData = 3,
  InitRequest_FieldNumber_ProductId = 4,
  InitRequest_FieldNumber_SamplePointBytes = 5,
  InitRequest_FieldNumber_SendPerSeconds = 6,
  InitRequest_FieldNumber_SleepRatio = 7,
  InitRequest_FieldNumber_AppName = 8,
  InitRequest_FieldNumber_LogLevel = 9,
  InitRequest_FieldNumber_UserName = 10,
  InitRequest_FieldNumber_ExpireTime = 11,
  InitRequest_FieldNumber_Token = 12,
  InitRequest_FieldNumber_Version = 13,
};

@interface InitRequest : GPBMessage

@property(nonatomic, readwrite) BOOL enableLongSpeech;

@property(nonatomic, readwrite) BOOL enableChunk;

@property(nonatomic, readwrite) BOOL enableFlushData;

@property(nonatomic, readwrite, copy, null_resettable) NSString *productId;

@property(nonatomic, readwrite) uint32_t samplePointBytes;

@property(nonatomic, readwrite) double sendPerSeconds;

@property(nonatomic, readwrite) double sleepRatio;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appName;

@property(nonatomic, readwrite) uint32_t logLevel;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *expireTime;

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite) ProtoVersion version;

@end

/**
 * Fetches the raw value of a @c InitRequest's @c version property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t InitRequest_Version_RawValue(InitRequest *message);
/**
 * Sets the raw value of an @c InitRequest's @c version property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetInitRequest_Version_RawValue(InitRequest *message, int32_t value);

#pragma mark - AudioFragmentRequest

typedef GPB_ENUM(AudioFragmentRequest_FieldNumber) {
  AudioFragmentRequest_FieldNumber_SequenceNum = 1,
  AudioFragmentRequest_FieldNumber_SendTimestamp = 2,
  AudioFragmentRequest_FieldNumber_AudioData = 3,
};

@interface AudioFragmentRequest : GPBMessage

@property(nonatomic, readwrite) uint32_t sequenceNum;

@property(nonatomic, readwrite) uint64_t sendTimestamp;

@property(nonatomic, readwrite, copy, null_resettable) NSData *audioData;

@end

#pragma mark - AudioFragmentResult

typedef GPB_ENUM(AudioFragmentResult_FieldNumber) {
  AudioFragmentResult_FieldNumber_StartTime = 1,
  AudioFragmentResult_FieldNumber_EndTime = 2,
  AudioFragmentResult_FieldNumber_Result = 3,
  AudioFragmentResult_FieldNumber_Completed = 4,
  AudioFragmentResult_FieldNumber_SerialNum = 5,
};

@interface AudioFragmentResult : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *startTime;

@property(nonatomic, readwrite, copy, null_resettable) NSString *endTime;

@property(nonatomic, readwrite, copy, null_resettable) NSString *result;

@property(nonatomic, readwrite) BOOL completed;

@property(nonatomic, readwrite, copy, null_resettable) NSString *serialNum;

@end

#pragma mark - AudioFragmentResponse

typedef GPB_ENUM(AudioFragmentResponse_FieldNumber) {
  AudioFragmentResponse_FieldNumber_ErrorCode = 1,
  AudioFragmentResponse_FieldNumber_ErrorMessage = 2,
  AudioFragmentResponse_FieldNumber_Type = 3,
  AudioFragmentResponse_FieldNumber_AudioFragment = 4,
};

@interface AudioFragmentResponse : GPBMessage

@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@property(nonatomic, readwrite) ResponseType type;

@property(nonatomic, readwrite, strong, null_resettable) AudioFragmentResult *audioFragment;
/** Test to see if @c audioFragment has been set. */
@property(nonatomic, readwrite) BOOL hasAudioFragment;

@end

/**
 * Fetches the raw value of a @c AudioFragmentResponse's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AudioFragmentResponse_Type_RawValue(AudioFragmentResponse *message);
/**
 * Sets the raw value of an @c AudioFragmentResponse's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAudioFragmentResponse_Type_RawValue(AudioFragmentResponse *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
